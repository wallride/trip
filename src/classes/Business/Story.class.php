<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2015-03-25 00:59:32                           *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

	class Story extends AutoStory implements Prototyped, DAOConnected, IArrayable
	{
		/**
		 * @return Story
		**/
		public static function create()
		{
			return new self;
		}
		
		/**
		 * @return StoryDAO
		**/
		public static function dao()
		{
			return Singleton::getInstance('StoryDAO');
		}
		
		/**
		 * @return ProtoStory
		**/
		public static function proto()
		{
			return Singleton::getInstance('ProtoStory');
		}
		
		// your brilliant stuff goes here

                /**
                 * 
                 * @return Criteria
                 */
                public function getStoryMembers(){
                    $c = Criteria::create(Member::dao());
                    $c->add(Expression::eq('story.id',$this->getId()));
                    return $c;
                }
                
                /**
                 * 
                 * @param User $user
                 * @return Member
                 */
                public function getMember(User $user){
                    $c = $this->getStoryMembers();
                    $c->add(Expression::eq('user.id',$user->getId()));
                    $l = $c->getList();
                    return count($l)>0 ? $l[0] : null;
                }
                
                
                
                public function toArray() {
                    return array(
                        'id'=>$this->getId(),
                        'name'=>$this->getName(),
                        'description'=>$this->getDescription(),
                        'owner'=>$this->getOwner(),
                        'dateStart'=>$this->getDateStart()->getValue(),
                        'myMember'=>$this->getMember(SecurityManager::me()->getUser()),
                        'members'=>$this->getStoryMembers()->getList()
                    );
                }
                
                public function toExtendedArray() {
                    $arr = parent::toExtendedArray();
                    
                    return $arr;
                }
                
                
    }
?>