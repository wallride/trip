<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2014-09-26 13:10:55                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoTask extends BaseTaskModel
	{
		protected $requirement = null;
		protected $requirementId = null;
		protected $name = null;
		protected $description = null;
		protected $sortOrder = null;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'requirementId', 'name', 'description', 'sortOrder')
			);
		}
		
		/**
		 * @return Requirement
		**/
		public function getRequirement()
		{
			if (!$this->requirement && $this->requirementId) {
				$this->requirement = Requirement::dao()->getById($this->requirementId);
			}
			
			return $this->requirement;
		}
		
		public function getRequirementId()
		{
			return $this->requirementId;
		}
		
		/**
		 * @return Task
		**/
		public function setRequirement(Requirement $requirement)
		{
			$this->requirement = $requirement;
			$this->requirementId = $requirement->getId();
			
			return $this;
		}
		
		/**
		 * @return Task
		**/
		public function setRequirementId($id)
		{
			$this->requirement = null;
			$this->requirementId = $id;
			
			return $this;
		}
		
		/**
		 * @return Task
		**/
		public function dropRequirement()
		{
			$this->requirement = null;
			$this->requirementId = null;
			
			return $this;
		}
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return Task
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		public function getDescription()
		{
			return $this->description;
		}
		
		/**
		 * @return Task
		**/
		public function setDescription($description)
		{
			$this->description = $description;
			
			return $this;
		}
		
		public function getSortOrder()
		{
			return $this->sortOrder;
		}
		
		/**
		 * @return Task
		**/
		public function setSortOrder($sortOrder)
		{
			$this->sortOrder = $sortOrder;
			
			return $this;
		}
	}
?>