<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2015-03-30 23:34:59                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoMember extends CreatedAndModified
	{
		protected $title = null;
		protected $user = null;
		protected $userId = null;
		protected $story = null;
		protected $storyId = null;
		protected $type = null;
		protected $typeId = null;
		protected $status = null;
		protected $statusId = null;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'title', 'userId', 'storyId', 'typeId', 'statusId')
			);
		}
		
		public function getTitle()
		{
			return $this->title;
		}
		
		/**
		 * @return Member
		**/
		public function setTitle($title)
		{
			$this->title = $title;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getUser()
		{
			if (!$this->user && $this->userId) {
				$this->user = User::dao()->getById($this->userId);
			}
			
			return $this->user;
		}
		
		public function getUserId()
		{
			return $this->userId;
		}
		
		/**
		 * @return Member
		**/
		public function setUser(User $user)
		{
			$this->user = $user;
			$this->userId = $user->getId();
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function setUserId($id)
		{
			$this->user = null;
			$this->userId = $id;
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function dropUser()
		{
			$this->user = null;
			$this->userId = null;
			
			return $this;
		}
		
		/**
		 * @return Story
		**/
		public function getStory()
		{
			if (!$this->story && $this->storyId) {
				$this->story = Story::dao()->getById($this->storyId);
			}
			
			return $this->story;
		}
		
		public function getStoryId()
		{
			return $this->storyId;
		}
		
		/**
		 * @return Member
		**/
		public function setStory(Story $story)
		{
			$this->story = $story;
			$this->storyId = $story->getId();
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function setStoryId($id)
		{
			$this->story = null;
			$this->storyId = $id;
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function dropStory()
		{
			$this->story = null;
			$this->storyId = null;
			
			return $this;
		}
		
		/**
		 * @return MemberType
		**/
		public function getType()
		{
			if (!$this->type && $this->typeId) {
				$this->type = new MemberType($this->typeId);
			}
			
			return $this->type;
		}
		
		public function getTypeId()
		{
			return $this->typeId;
		}
		
		/**
		 * @return Member
		**/
		public function setType(MemberType $type)
		{
			$this->type = $type;
			$this->typeId = $type->getId();
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function setTypeId($id)
		{
			$this->type = null;
			$this->typeId = $id;
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function dropType()
		{
			$this->type = null;
			$this->typeId = null;
			
			return $this;
		}
		
		/**
		 * @return MemberStatus
		**/
		public function getStatus()
		{
			if (!$this->status && $this->statusId) {
				$this->status = new MemberStatus($this->statusId);
			}
			
			return $this->status;
		}
		
		public function getStatusId()
		{
			return $this->statusId;
		}
		
		/**
		 * @return Member
		**/
		public function setStatus(MemberStatus $status)
		{
			$this->status = $status;
			$this->statusId = $status->getId();
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function setStatusId($id)
		{
			$this->status = null;
			$this->statusId = $id;
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function dropStatus()
		{
			$this->status = null;
			$this->statusId = null;
			
			return $this;
		}
	}
?>