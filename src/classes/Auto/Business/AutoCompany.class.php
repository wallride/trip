<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2014-09-25 16:55:18                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoCompany extends CreatedAndModified
	{
		protected $name = null;
		protected $createdByUser = null;
		protected $createdByUserId = null;
		protected $members = null;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'name', 'createdByUserId')
			);
		}
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return Company
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getCreatedByUser()
		{
			if (!$this->createdByUser && $this->createdByUserId) {
				$this->createdByUser = User::dao()->getById($this->createdByUserId);
			}
			
			return $this->createdByUser;
		}
		
		public function getCreatedByUserId()
		{
			return $this->createdByUserId;
		}
		
		/**
		 * @return Company
		**/
		public function setCreatedByUser(User $createdByUser)
		{
			$this->createdByUser = $createdByUser;
			$this->createdByUserId = $createdByUser->getId();
			
			return $this;
		}
		
		/**
		 * @return Company
		**/
		public function setCreatedByUserId($id)
		{
			$this->createdByUser = null;
			$this->createdByUserId = $id;
			
			return $this;
		}
		
		/**
		 * @return Company
		**/
		public function dropCreatedByUser()
		{
			$this->createdByUser = null;
			$this->createdByUserId = null;
			
			return $this;
		}
		
		/**
		 * @return CompanyMembersDAO
		**/
		public function getMembers($lazy = false)
		{
			if (!$this->members || ($this->members->isLazy() != $lazy)) {
				$this->members = new CompanyMembersDAO($this, $lazy);
			}
			
			return $this->members;
		}
		
		/**
		 * @return Company
		**/
		public function fillMembers($collection, $lazy = false)
		{
			$this->members = new CompanyMembersDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->members->mergeList($collection);
			
			return $this;
		}
	}
?>