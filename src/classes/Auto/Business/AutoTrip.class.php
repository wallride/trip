<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2015-04-21 21:29:01                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoTrip extends CreatedAndModified
	{
		protected $name = null;
		protected $description = null;
		protected $dateStart = null;
		protected $dateEnd = null;
		protected $owner = null;
		protected $ownerId = null;
		protected $members = null;
		protected $public = false;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'name', 'description', 'dateStart', 'dateEnd', 'ownerId', 'public')
			);
		}
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return Trip
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		public function getDescription()
		{
			return $this->description;
		}
		
		/**
		 * @return Trip
		**/
		public function setDescription($description)
		{
			$this->description = $description;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getDateStart()
		{
			return $this->dateStart;
		}
		
		/**
		 * @return Trip
		**/
		public function setDateStart(Timestamp $dateStart)
		{
			$this->dateStart = $dateStart;
			
			return $this;
		}
		
		/**
		 * @return Trip
		**/
		public function dropDateStart()
		{
			$this->dateStart = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getDateEnd()
		{
			return $this->dateEnd;
		}
		
		/**
		 * @return Trip
		**/
		public function setDateEnd(Timestamp $dateEnd)
		{
			$this->dateEnd = $dateEnd;
			
			return $this;
		}
		
		/**
		 * @return Trip
		**/
		public function dropDateEnd()
		{
			$this->dateEnd = null;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getOwner()
		{
			if (!$this->owner && $this->ownerId) {
				$this->owner = User::dao()->getById($this->ownerId);
			}
			
			return $this->owner;
		}
		
		public function getOwnerId()
		{
			return $this->ownerId;
		}
		
		/**
		 * @return Trip
		**/
		public function setOwner(User $owner)
		{
			$this->owner = $owner;
			$this->ownerId = $owner->getId();
			
			return $this;
		}
		
		/**
		 * @return Trip
		**/
		public function setOwnerId($id)
		{
			$this->owner = null;
			$this->ownerId = $id;
			
			return $this;
		}
		
		/**
		 * @return Trip
		**/
		public function dropOwner()
		{
			$this->owner = null;
			$this->ownerId = null;
			
			return $this;
		}
		
		/**
		 * @return TripMembersDAO
		**/
		public function getMembers($lazy = false)
		{
			if (!$this->members || ($this->members->isLazy() != $lazy)) {
				$this->members = new TripMembersDAO($this, $lazy);
			}
			
			return $this->members;
		}
		
		/**
		 * @return Trip
		**/
		public function fillMembers($collection, $lazy = false)
		{
			$this->members = new TripMembersDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->members->mergeList($collection);
			
			return $this;
		}
		
		public function getPublic()
		{
			return $this->public;
		}
		
		public function isPublic()
		{
			return $this->public;
		}
		
		/**
		 * @return Trip
		**/
		public function setPublic($public = null)
		{
			Assert::isTernaryBase($public);
			
			$this->public = $public;
			
			return $this;
		}
	}
?>