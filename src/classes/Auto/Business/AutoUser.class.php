<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2015-03-30 23:42:42                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoUser extends CreatedAndModified
	{
		protected $name = null;
		protected $firstName = null;
		protected $middleName = null;
		protected $lastName = null;
		protected $email = null;
		protected $auth = null;
		protected $authId = null;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'name', 'firstName', 'middleName', 'lastName', 'email', 'authId')
			);
		}
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return User
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		public function getFirstName()
		{
			return $this->firstName;
		}
		
		/**
		 * @return User
		**/
		public function setFirstName($firstName)
		{
			$this->firstName = $firstName;
			
			return $this;
		}
		
		public function getMiddleName()
		{
			return $this->middleName;
		}
		
		/**
		 * @return User
		**/
		public function setMiddleName($middleName)
		{
			$this->middleName = $middleName;
			
			return $this;
		}
		
		public function getLastName()
		{
			return $this->lastName;
		}
		
		/**
		 * @return User
		**/
		public function setLastName($lastName)
		{
			$this->lastName = $lastName;
			
			return $this;
		}
		
		public function getEmail()
		{
			return $this->email;
		}
		
		/**
		 * @return User
		**/
		public function setEmail($email)
		{
			$this->email = $email;
			
			return $this;
		}
		
		/**
		 * @return Auth
		**/
		public function getAuth()
		{
			if (!$this->auth && $this->authId) {
				$this->auth = Auth::dao()->getById($this->authId);
			}
			
			return $this->auth;
		}
		
		public function getAuthId()
		{
			return $this->authId;
		}
		
		/**
		 * @return User
		**/
		public function setAuth(Auth $auth)
		{
			$this->auth = $auth;
			$this->authId = $auth->getId();
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function setAuthId($id)
		{
			$this->auth = null;
			$this->authId = $id;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function dropAuth()
		{
			$this->auth = null;
			$this->authId = null;
			
			return $this;
		}
	}
?>