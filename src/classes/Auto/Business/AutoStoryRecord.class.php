<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1 at 2015-03-30 23:34:59                           *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoStoryRecord extends CreatedAndModified
	{
		protected $story = null;
		protected $storyId = null;
		protected $storyPeriod = null;
		protected $storyPeriodId = null;
		protected $description = null;
		protected $date = null;
		protected $owner = null;
		protected $ownerId = null;
		protected $public = false;
		
		public function __sleep()
		{
			return array_merge(
				parent::__sleep(),
				array('id', 'storyId', 'storyPeriodId', 'description', 'date', 'ownerId', 'public')
			);
		}
		
		/**
		 * @return Story
		**/
		public function getStory()
		{
			if (!$this->story && $this->storyId) {
				$this->story = Story::dao()->getById($this->storyId);
			}
			
			return $this->story;
		}
		
		public function getStoryId()
		{
			return $this->storyId;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setStory(Story $story)
		{
			$this->story = $story;
			$this->storyId = $story->getId();
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setStoryId($id)
		{
			$this->story = null;
			$this->storyId = $id;
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function dropStory()
		{
			$this->story = null;
			$this->storyId = null;
			
			return $this;
		}
		
		/**
		 * @return StoryPeriod
		**/
		public function getStoryPeriod()
		{
			if (!$this->storyPeriod && $this->storyPeriodId) {
				$this->storyPeriod = StoryPeriod::dao()->getById($this->storyPeriodId);
			}
			
			return $this->storyPeriod;
		}
		
		public function getStoryPeriodId()
		{
			return $this->storyPeriodId;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setStoryPeriod(StoryPeriod $storyPeriod)
		{
			$this->storyPeriod = $storyPeriod;
			$this->storyPeriodId = $storyPeriod->getId();
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setStoryPeriodId($id)
		{
			$this->storyPeriod = null;
			$this->storyPeriodId = $id;
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function dropStoryPeriod()
		{
			$this->storyPeriod = null;
			$this->storyPeriodId = null;
			
			return $this;
		}
		
		public function getDescription()
		{
			return $this->description;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setDescription($description)
		{
			$this->description = $description;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getDate()
		{
			return $this->date;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setDate(Timestamp $date)
		{
			$this->date = $date;
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function dropDate()
		{
			$this->date = null;
			
			return $this;
		}
		
		/**
		 * @return Member
		**/
		public function getOwner()
		{
			if (!$this->owner && $this->ownerId) {
				$this->owner = Member::dao()->getById($this->ownerId);
			}
			
			return $this->owner;
		}
		
		public function getOwnerId()
		{
			return $this->ownerId;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setOwner(Member $owner)
		{
			$this->owner = $owner;
			$this->ownerId = $owner->getId();
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setOwnerId($id)
		{
			$this->owner = null;
			$this->ownerId = $id;
			
			return $this;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function dropOwner()
		{
			$this->owner = null;
			$this->ownerId = null;
			
			return $this;
		}
		
		public function getPublic()
		{
			return $this->public;
		}
		
		public function isPublic()
		{
			return $this->public;
		}
		
		/**
		 * @return StoryRecord
		**/
		public function setPublic($public = null)
		{
			Assert::isTernaryBase($public);
			
			$this->public = $public;
			
			return $this;
		}
	}
?>